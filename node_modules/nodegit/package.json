{
  "name": "nodegit",
  "description": "Node.js libgit2 asynchronous native bindings",
  "version": "0.2.7",
  "libgit2": {
    "sha": "d853fb9f24e0fe63b3dce9fbc04fd9cfe17a030b",
    "version": "0.21.5"
  },
  "libssh2": {
    "url": "http://www.libssh2.org/download/libssh2-1.4.3.tar.gz",
    "version": "1.4.3"
  },
  "http_parser": {
    "url": "https://github.com/joyent/http-parser/archive/v2.3.tar.gz",
    "version": "2.3.0",
    "0.10": {
      "url": "https://github.com/joyent/http-parser/archive/v2.0.tar.gz",
      "version": "2.0.0"
    }
  },
  "homepage": "http://nodegit.org",
  "keywords": [
    "libgit2",
    "git2",
    "git",
    "native"
  ],
  "license": "MIT",
  "author": {
    "name": "Tim Branyen",
    "url": "@tbranyen"
  },
  "contributors": [
    {
      "name": "John Haley",
      "email": "john@haley.io"
    },
    {
      "name": "Max Korp",
      "email": "maxkorp@8bytealchemy.com"
    }
  ],
  "main": "lib/nodegit.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/nodegit/nodegit.git"
  },
  "directories": {
    "build": "./build",
    "lib": "./lib"
  },
  "engines": {
    "node": ">= 0.8"
  },
  "dependencies": {
    "find-parent-dir": "^0.3.0",
    "fs-extra": "~0.14.0",
    "node-pre-gyp": "~0.6.1",
    "nodegit-promise": "~1.0.0",
    "promisify-node": "~0.1.2"
  },
  "devDependencies": {
    "mocha": "~2.1.0",
    "combyne": "~0.6.2",
    "istanbul": "~0.3.2",
    "js-beautify": "^1.5.4",
    "jshint": "~2.5.6",
    "lodash": "^2.4.1",
    "nan": "~1.5.0",
    "node-gyp": "~1.0.2",
    "nw-gyp": "^0.12.4",
    "request": "~2.51.0",
    "tar": "~1.0.1"
  },
  "binary": {
    "module_name": "nodegit",
    "module_path": "./build/Release/",
    "host": "https://nodegit.s3.amazonaws.com/nodegit/nodegit/"
  },
  "scripts": {
    "lint": "jshint lib test/tests examples",
    "cov": "node test",
    "mocha": "mocha test/runner test/tests",
    "mochaDebug": "mocha --debug-brk test/runner test/tests",
    "test": "npm run lint && npm run cov",
    "generateJson": "node generate/scripts/generateJson",
    "generateNativeCode": "node generate/scripts/generateNativeCode",
    "generateMissingTests": "node generate/scripts/generateMissingTests",
    "prepublish": "node prepublish",
    "publish": "node-pre-gyp package && node-pre-gyp publish",
    "install": "node install",
    "recompile": "BUILD_ONLY=true npm install",
    "rebuild": "BUILD_ONLY=true node generate && node-gyp configure build"
  },
  "readme": "NodeGit\n-------\n\n> Node bindings to the [libgit2](http://libgit2.github.com/) project.\n\n[![Build Status] (https://travis-ci.org/nodegit/nodegit.svg)](https://travis-ci.org/nodegit/nodegit)\n[![Build status] (https://ci.appveyor.com/api/projects/status/e5a5q75l9yfhnfv2?svg=true)](https://ci.appveyor.com/project/timbranyen/nodegit)\n[![Dependency Status] (https://david-dm.org/nodegit/nodegit.svg)](https://david-dm.org/nodegit/nodegit)\n\n## Have a problem? Come chat with us! ##\n\n[![Gitter](https://badges.gitter.im/Join Chat.svg)](https://gitter.im/nodegit/nodegit?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n**Stable: 0.2.7**\n\n## Maintained by ##\nTim Branyen [@tbranyen](http://twitter.com/tbranyen), John Haley [@johnhaley81](http://twitter.com/johnhaley81), and Max Korp [@maxkorp](http://twitter.com/MaximilianoKorp) with help from [awesome contributors](https://github.com/nodegit/nodegit/contributors)!\n\n### Alumni Maintainers ###\nMichael Robinson [@codeofinterest](http://twitter.com/codeofinterest), and Nick Kallen [@nk](http://twitter.com/nk)\n\n## API Documentation. ##\n\nhttp://www.nodegit.org/\n\n## Getting started. ##\n\nNodeGit will work on most systems out-of-the-box without any native\ndependencies.\n\n``` bash\nnpm install nodegit\n```\n\nIf you encounter problems while installing, you should try the Building from source instructions below.\n\n## Building from source. ##\n\nMinimum dependencies:\n\n- [Python 2](https://www.python.org/)\n\nIf you wish to help contribute to nodegit it is useful to build locally.\n\n``` bash\n# Fetch this project.\ngit clone git://github.com/nodegit/nodegit.git\n\n# Enter the repository.\ncd nodegit\n\n# Installs the template engine, run the code generation script, and build.\nnpm install\n```\n\nIf you encounter errors, you most likely have not configured the dependencies correctly.\n\n### Debug build\n\nIn order to track down possible bugs, you will need a debug buid so you\ncan get a backtrace with [gdb](http://www.gnu.org/software/gdb/) or\n[lldb](http://lldb.llvm.org/).\n\nIn order to do so, follow these steps:\n\n  1. `BUILD_ONLY=true npm install`, or `BUILD_ONLY=true npm link .` if\n     you are into it\n  2. `rm -rf build/Release`\n  3. `node-gyp configure --debug`\n  4. `node-gyp build --debug`\n\n### Installing dependencies: ###\n\n#### Mac OS X ####\n\n- [Install XCode Command Line Tools](http://railsapps.github.io/xcode-command-line-tools.html)\n\n#### Linux ####\n\nUsing APT in Ubuntu:\n\n``` bash\nsudo apt-get install build-essential\n```\n\nUsing Pacman in Arch Linux:\n\n``` bash\nsudo pacman -S base-devel\n```\n\n#### Windows ####\n\n- [Download and install Python](https://www.python.org/download/windows).\n- [Download and install VS Express](http://www.visualstudio.com/downloads/download-visual-studio-vs#d-express-windows-desktop).\n\nYou may have to add a build flag to the installation process to successfully install.  Try first without, if the build fails, try again with the flag.\n\n*Allegedly the order in which you install Visual Studio could trigger this error.*\n\n``` bash\nnpm install nodegit --msvs_version=2013\n# Or whatever version you've installed.\n```\n\n## API examples. ##\n\n### Cloning a repository and reading a file: ###\n\n``` javascript\nvar clone = require(\"./\").Clone.clone;\n\n// Clone a given repository into a specific folder.\nclone(\"https://github.com/nodegit/nodegit\", \"tmp\", null)\n  // Look up this known commit.\n  .then(function(repo) {\n    // Use a known commit sha from this repository.\n    return repo.getCommit(\"59b20b8d5c6ff8d09518454d4dd8b7b30f095ab5\");\n  })\n  // Look up a specific file within that commit.\n  .then(function(commit) {\n    return commit.getEntry(\"README.md\");\n  })\n  // Get the blob contents from the file.\n  .then(function(entry) {\n    // Patch the blob to contain a reference to the entry.\n    return entry.getBlob().then(function(blob) {\n      blob.entry = entry;\n      return blob;\n    });\n  })\n  // Display information about the blob.\n  .then(function(blob) {\n    // Show the name, sha, and filesize in byes.\n    console.log(blob.entry.name() + blob.entry.sha() + blob.size() + \"b\");\n\n    // Show a spacer.\n    console.log(Array(72).join(\"=\") + \"\\n\\n\");\n\n    // Show the entire file.\n    console.log(String(blob));\n  })\n  .catch(function(err) { console.log(err); });\n\n```\n\n### Emulating git log: ###\n\n``` javascript\nvar open = require(\"nodegit\").Repository.open;\n\n// Open the repository directory.\nopen(\"tmp\")\n  // Open the master branch.\n  .then(function(repo) {\n    return repo.getMasterCommit();\n  })\n  // Display information about commits on master.\n  .then(function(firstCommitOnMaster) {\n    // Create a new history event emitter.\n    var history = firstCommitOnMaster.history();\n\n    // Create a counter to only show up to 9 entries.\n    var count = 0;\n\n    // Listen for commit events from the history.\n    history.on(\"commit\", function(commit) {\n      // Disregard commits past 9.\n      if (++count >= 9) {\n        return;\n      }\n\n      // Show the commit sha.\n      console.log(\"commit \" + commit.sha());\n\n      // Store the author object.\n      var author = commit.author();\n\n      // Display author information.\n      console.log(\"Author:\\t\" + author.name() + \" <\", author.email() + \">\");\n\n      // Show the commit date.\n      console.log(\"Date:\\t\" + commit.date());\n\n      // Give some space and show the message.\n      console.log(\"\\n    \" + commit.message());\n    });\n\n    // Start emitting events.\n    history.start();\n  });\n```\n\n## Unit tests. ##\n\nYou will need to build locally before running the tests.  See above.\n\n``` bash\nnpm test\n```\n\n## Migrating from old versions. ##\n\nThe bump from 0.1.4 to 0.2.0 was a big one. Many things changed, see here:\nhttps://github.com/nodegit/nodegit/compare/refs/tags/0.1.4...0.2.0\n\nThis update is wholly and entirely a breaking one, and older versions won't be\nmaintained. For the purpose of migration, perhaps the biggest point to make\nis that async methods can now use promises, rather than just taking callbacks. Additionally, lots of method and property names have changed.\n\n## Node-Webkit ##\n\nA common issue is with nodegit not functioning properly inside of\n[node-webkit](http://github.com/rogerwang/node-webkit) applications. Because nodegit\nis a native module, it has to be rebuilt for node-webkit using\n[nw-gyp](http://github.com/rogerwang/nw-gyp). By default, nodegit will look in the root package's package.json for an `engines` property, and within look for a `node-webkit` property that holds a specific version of node-webkit. The value of this property is what will get passed as the `--target` argument to `nw-gyp configure`.\n\nCurrently, support for node-webkit is limited, although we intend to support it better in the future.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/nodegit/nodegit/issues"
  },
  "bundleDependencies": [
    "node-pre-gyp"
  ],
  "_id": "nodegit@0.2.7",
  "dist": {
    "shasum": "9ed7dab939925704fa926b4e6557b24ba7b1c61d"
  },
  "_from": "nodegit@^0.2.7",
  "_resolved": "https://registry.npmjs.org/nodegit/-/nodegit-0.2.7.tgz"
}
